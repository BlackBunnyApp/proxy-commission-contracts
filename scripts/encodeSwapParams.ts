import hardhat, { ethers } from 'hardhat';

async function deploy() {
	const rawTxData =
		// eslint-disable-next-line max-len
		'0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000006473950f00000000000000000000000000000000000000000000000000000000000000020b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a7640000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000def1600000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b0d500b1d8e8ef31e21c99d1db9a6444d3adf12700001f4c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000000000000000000000';

	const factory = await ethers.getContractFactory('IUniversalRouter');
	const routerInterface = factory.interface;
	const decodedTx = routerInterface.decodeFunctionData('execute', rawTxData);
	// const abi = new ethers.utils.AbiCoder('IUniversalRouter');
	// const decodedTx = routerInterface.decode(['bytes', 'address', 'uint256', 'uint256', 'bytes', 'bool', 'uint256'], rawTxData);

	console.log(decodedTx);
}

deploy()
	.then(() => process.exit(0))
	.catch((error) => {
		console.log(error);
		process.exit(1);
	});
